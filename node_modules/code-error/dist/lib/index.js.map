{"version":3,"sources":["../../src/lib/index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import A2H from 'ansi-to-html';\nimport chalk from 'chalk';\nimport ExtendableError from 'es6-error';\nimport stripANSI from 'strip-ansi';\n\nconst a2h = new A2H();\n\nconst defaults = {\n  maxLines: 8,\n  highlightColour: 'red',\n  // file, contents, line, column, endLine, endColumn\n};\n\nexport default class CodeError extends ExtendableError {\n  constructor(message, options) {\n    super(message);\n\n    Object.assign(this, defaults, options);\n\n    Object.defineProperty(this, '__CodeError', {value: true});\n\n    if (chalk[this.highlightColour]) this.highlight = chalk[this.highlightColour];\n    else this.highlight = chalk.red;\n  }\n\n\n  get ansiExcerpt() {\n    // array of lines that will form the report\n    const report = [];\n\n    // add source lines\n    if ((this.contents != null) && (this.line != null)) {\n      const lines = [];\n\n      let line = this.line + 1;\n      let max = this.maxLines;\n      const mostDigits = String(this.line).length + 1;\n      const sourceSplit = this.contents.toString().split('\\n');\n      let digitGap;\n\n      while (line-- > 1 && max-- > 0) {\n        digitGap = spaces(mostDigits - String(line).length);\n        let lineReport = '  ' + digitGap + chalk.grey(line) + chalk.grey(' ┃ ');\n\n        if (line === this.line) lineReport += sourceSplit[line - 1]; // the error line: bright\n        else lineReport += chalk.grey(sourceSplit[line - 1]); // non-error line: dim\n\n        lines.unshift(lineReport);\n      }\n\n      report.push(lines.join('\\n'));\n\n      // add a line to show column of error\n      if (this.column != null) {\n        digitGap = spaces(mostDigits);\n        report.push(\n          digitGap + spaces(this.column + 5) +\n          this.highlight('↑')\n        );\n      }\n      else report.push('');\n    }\n\n    // put it together\n    return report.join('\\n');\n  }\n\n  get excerpt() {\n    return stripANSI(this.ansiExcerpt);\n  }\n\n  get htmlExcerpt() {\n    return a2h.toHtml(this.ansiExcerpt.replace(/&/g, '&amp;').replace(/</g, '&lt;'));\n  }\n\n  /**\n   * Suffix for appending to the file path to indicate error position.\n   * e.g. \":12:34\" means line 12, char 34\n   */\n  get suffix() {\n    let suffix = '';\n\n    if (this.line != null) {\n      suffix += ':' + this.line;\n      if (this.column != null) suffix += ':' + this.column;\n    }\n\n    return suffix;\n  }\n}\n\nfunction spaces(count) {\n  return new Array(count).join(' ');\n}\n"]}